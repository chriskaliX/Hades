name: Hades-driver

on:
  push:
    tags:
    - ebpfdriver-v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: go env
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      
      - name: llvm env
        run: |
          sudo apt-get update
          sudo apt-get install --yes build-essential pkgconf libelf-dev llvm-12 clang-12 linux-tools-common linux-tools-generic
          for tool in "clang" "llc" "llvm-strip"
          do
            sudo rm -f /usr/bin/$tool
            sudo ln -s /usr/bin/$tool-12 /usr/bin/$tool
          done
        shell: bash
      
      - name: auth
        run: |
          gh auth login --with-token <<<'${{ secrets.GITHUB_TOKEN }}'
      
      - name: build
        run: |
          cd pluginss/ebpfdriver
          make core
          cd ../..

      - name: upload
        uses: actions/upload-artifact@v3
        with:
          path: plugins/ebpfdriver/ebpfdriver
          name: ebpfdriver
      
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # draft for testing! 
        draft: true
        prerelease: false
        release_name: Release ${{github.ref}}
        tag_name: ${{github.ref}}
    - name: version env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/download-artifact@v3
      with:
        path: /tmp/ebpfdriver
    - name: package
      working-directory: /tmp/ebpfdriver/ebpfdriver
      run: |
        sha256sum ebpfdriver >> checksum.txt
        tar zcvf /tmp/ebpfdriver.tgz ebpfdriver checksum.txt
    - name: upload
      id: upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        asset_content_type: application/tar+gzip
        asset_name: ${{ env.RELEASE_VERSION }}.tgz
        asset_path: /tmp/ebpfdriver.tgz
        upload_url: ${{steps.create_release.outputs.upload_url}}
    needs:
    - build
