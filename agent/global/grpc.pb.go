// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package global

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RawData struct {
	IntranetIPv4         []string  `protobuf:"bytes,1,rep,name=IntranetIPv4,proto3" json:"IntranetIPv4,omitempty"`
	ExtranetIPv4         []string  `protobuf:"bytes,2,rep,name=ExtranetIPv4,proto3" json:"ExtranetIPv4,omitempty"`
	IntranetIPv6         []string  `protobuf:"bytes,3,rep,name=IntranetIPv6,proto3" json:"IntranetIPv6,omitempty"`
	ExtranetIPv6         []string  `protobuf:"bytes,4,rep,name=ExtranetIPv6,proto3" json:"ExtranetIPv6,omitempty"`
	Hostname             string    `protobuf:"bytes,5,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	AgentID              string    `protobuf:"bytes,6,opt,name=AgentID,proto3" json:"AgentID,omitempty"`
	Timestamp            int64     `protobuf:"varint,7,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Version              string    `protobuf:"bytes,8,opt,name=Version,proto3" json:"Version,omitempty"`
	Pkg                  []*Record `protobuf:"bytes,9,rep,name=Pkg,proto3" json:"Pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RawData) Reset()         { *m = RawData{} }
func (m *RawData) String() string { return proto.CompactTextString(m) }
func (*RawData) ProtoMessage()    {}
func (*RawData) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{0}
}

func (m *RawData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawData.Unmarshal(m, b)
}
func (m *RawData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawData.Marshal(b, m, deterministic)
}
func (m *RawData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawData.Merge(m, src)
}
func (m *RawData) XXX_Size() int {
	return xxx_messageInfo_RawData.Size(m)
}
func (m *RawData) XXX_DiscardUnknown() {
	xxx_messageInfo_RawData.DiscardUnknown(m)
}

var xxx_messageInfo_RawData proto.InternalMessageInfo

func (m *RawData) GetIntranetIPv4() []string {
	if m != nil {
		return m.IntranetIPv4
	}
	return nil
}

func (m *RawData) GetExtranetIPv4() []string {
	if m != nil {
		return m.ExtranetIPv4
	}
	return nil
}

func (m *RawData) GetIntranetIPv6() []string {
	if m != nil {
		return m.IntranetIPv6
	}
	return nil
}

func (m *RawData) GetExtranetIPv6() []string {
	if m != nil {
		return m.ExtranetIPv6
	}
	return nil
}

func (m *RawData) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *RawData) GetAgentID() string {
	if m != nil {
		return m.AgentID
	}
	return ""
}

func (m *RawData) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RawData) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *RawData) GetPkg() []*Record {
	if m != nil {
		return m.Pkg
	}
	return nil
}

type Record struct {
	//map.data_type = 数据类型; map.req_token = token
	//其中 map.req_token = token 用于与ModulesCtrlMessage token相对应 （Issues #1）
	Message              map[string]string `protobuf:"bytes,1,rep,name=message,proto3" json:"message,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{1}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetMessage() map[string]string {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*RawData)(nil), "proto.RawData")
	proto.RegisterType((*Record)(nil), "proto.Record")
	proto.RegisterMapType((map[string]string)(nil), "proto.Record.MessageEntry")
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_bedfbfc9b54e5600) }

var fileDescriptor_bedfbfc9b54e5600 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4b, 0xfb, 0x30,
	0x18, 0xc6, 0x69, 0xf3, 0xed, 0xaf, 0x77, 0xfb, 0x82, 0x04, 0x0f, 0xa1, 0x08, 0x96, 0x9e, 0x7a,
	0xea, 0x61, 0x8e, 0x22, 0xbb, 0x29, 0x1b, 0xd8, 0x83, 0x30, 0x82, 0x78, 0xf0, 0x96, 0xcd, 0x50,
	0xc6, 0xda, 0xa4, 0xa4, 0x71, 0x3a, 0xff, 0x22, 0xff, 0x4c, 0x69, 0xe2, 0xb4, 0xdb, 0x4e, 0xc9,
	0xf3, 0x3c, 0x9f, 0xf7, 0x49, 0x78, 0x01, 0x2a, 0xd5, 0xae, 0xf3, 0x56, 0x49, 0x2d, 0xb1, 0x67,
	0x8e, 0xf4, 0xcb, 0x85, 0x80, 0xb2, 0xf7, 0x39, 0xd3, 0x0c, 0xa7, 0x30, 0x2e, 0x85, 0x56, 0x4c,
	0x70, 0x5d, 0x2e, 0x77, 0x53, 0xe2, 0x24, 0x28, 0x8b, 0xe8, 0x91, 0xd7, 0x33, 0x8b, 0x8f, 0x01,
	0xe3, 0x5a, 0x66, 0xe8, 0x9d, 0xf4, 0x14, 0x04, 0x9d, 0xf5, 0x14, 0x27, 0x3d, 0x05, 0xf9, 0x77,
	0xd6, 0x53, 0xe0, 0x18, 0xc2, 0x07, 0xd9, 0x69, 0xc1, 0x1a, 0x4e, 0xbc, 0xc4, 0xc9, 0x22, 0xfa,
	0xab, 0x31, 0x81, 0xe0, 0xae, 0xe2, 0x42, 0x97, 0x73, 0xe2, 0x9b, 0xe8, 0x20, 0xf1, 0x15, 0x44,
	0x4f, 0x9b, 0x86, 0x77, 0x9a, 0x35, 0x2d, 0x09, 0x12, 0x27, 0x43, 0xf4, 0xcf, 0xe8, 0xe7, 0x9e,
	0xb9, 0xea, 0x36, 0x52, 0x90, 0xd0, 0xce, 0xfd, 0x48, 0x7c, 0x0d, 0x68, 0xb9, 0xad, 0x48, 0x94,
	0xa0, 0x6c, 0x34, 0xf9, 0x6f, 0xb7, 0x94, 0x53, 0xbe, 0x96, 0xea, 0x95, 0xf6, 0x49, 0xfa, 0x09,
	0xbe, 0x95, 0x78, 0x0a, 0x41, 0xc3, 0xbb, 0x8e, 0x55, 0xdc, 0xec, 0x68, 0x34, 0x89, 0x8f, 0xf0,
	0xfc, 0xd1, 0x86, 0x0b, 0xa1, 0xd5, 0x9e, 0x1e, 0xd0, 0x78, 0x06, 0xe3, 0x61, 0x80, 0x2f, 0x00,
	0x6d, 0xf9, 0x9e, 0x38, 0xe6, 0x1b, 0xfd, 0x15, 0x5f, 0x82, 0xb7, 0x63, 0xf5, 0x1b, 0x27, 0xae,
	0xf1, 0xac, 0x98, 0xb9, 0xb7, 0xce, 0x7d, 0xf8, 0xe2, 0x57, 0xb5, 0x5c, 0xb1, 0x7a, 0xe5, 0x9b,
	0x97, 0x6e, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xef, 0x05, 0xa8, 0xa1, 0xcc, 0x01, 0x00, 0x00,
}
